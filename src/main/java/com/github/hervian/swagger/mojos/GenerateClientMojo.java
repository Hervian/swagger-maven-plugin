package com.github.hervian.swagger.mojos;

import org.apache.maven.execution.MavenSession;
import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.BuildPluginManager;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugins.annotations.Component;
import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.apache.maven.plugins.annotations.ResolutionScope;
import org.apache.maven.project.MavenProject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;

import static org.twdata.maven.mojoexecutor.MojoExecutor.artifactId;
import static org.twdata.maven.mojoexecutor.MojoExecutor.configuration;
import static org.twdata.maven.mojoexecutor.MojoExecutor.element;
import static org.twdata.maven.mojoexecutor.MojoExecutor.executeMojo;
import static org.twdata.maven.mojoexecutor.MojoExecutor.executionEnvironment;
import static org.twdata.maven.mojoexecutor.MojoExecutor.goal;
import static org.twdata.maven.mojoexecutor.MojoExecutor.groupId;
import static org.twdata.maven.mojoexecutor.MojoExecutor.name;
import static org.twdata.maven.mojoexecutor.MojoExecutor.plugin;
import static org.twdata.maven.mojoexecutor.MojoExecutor.version;

@Mojo(name = "generateClient", requiresDependencyResolution = ResolutionScope.COMPILE_PLUS_RUNTIME, defaultPhase = LifecyclePhase.DEPLOY, threadSafe = true)
public class GenerateClientMojo extends AbstractMojo {
  private final Logger LOGGER = LoggerFactory.getLogger(GenerateClientMojo.class);

  @Parameter(defaultValue = "${project}", required = true, readonly = true)
  MavenProject project;

  @Parameter
  private List<String> resourcePackages;

  @Component
  private MavenSession mavenSession;

  @Component
  private BuildPluginManager pluginManager;


  @Override
  public void execute() throws MojoExecutionException {
    validatePhaseAndGoals();

    generateAndDeployClient();
  }

  /**
   * Validate that
   * <ul>
   *   <li>the plugin has configured the goal generateSwaggerDoc
   *    * (which is mandatory as present plugin generates a client from the swagger.json doc assumed
   *    to have been generated by the generateSwaggerDoc goal</li>
   *    <li>the configured phase, if any, of present execution is either null (=default) or LifecyclePhase.DEPLOY
   * </ul>
   */
  private void validatePhaseAndGoals() {
  }

  private void generateAndDeployClient() throws MojoExecutionException {
    executeMojo(
        plugin(
            groupId("org.openapitools"),
            artifactId("openapi-generator-maven-plugin"),
            version("5.3.0")
        ),
        goal("generate"),
        configuration(
            element(name("inputSpec"), project.getBuild().getOutputDirectory()+"/swagger/swagger.json"),
            element(name("generatorName"), "java"),
            element(name("output"), project.getBuild().getDirectory()+"/generated-sources/openapi"),
            element(name("groupId"), project.getGroupId()),
            element(name("artifactId"), project.getArtifactId() + "-client"),
            element(name("artifactVersion"), project.getVersion())//,
            //element(name("configOptions"), element(name(CodegenConstants.SOURCE_FOLDER), ""))
        ),
        executionEnvironment(
            project,
            mavenSession,
            pluginManager
        )
    );
    //GenerateClientMojo generateClientMojo = new GenerateClientMojo();
    //generation pt happens in a separate Mojo which the user of this library must enable by adding <goal>generateAndDeployClient</goal>
  }

}
